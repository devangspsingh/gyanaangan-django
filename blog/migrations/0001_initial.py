# Generated by Django 5.0.7 on 2024-10-21 12:35

import ckeditor_uploader.fields
import django.db.models.deletion
import gyanaangan.settings
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('keywords', models.CharField(blank=True, max_length=200)),
                ('og_image', models.FileField(blank=True, null=True, storage=gyanaangan.settings.PublicMediaStorage(), upload_to='og-image/')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('excerpt', models.TextField(blank=True, help_text='Short summary of the post', max_length=500)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('sticky_post', models.BooleanField(default=False, help_text='Sticky posts stay on top of the homepage.')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('reading_time', models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes.')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-publish_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('pinterest', 'Pinterest'), ('reddit', 'Reddit')], max_length=50)),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='blog.blogpost')),
            ],
        ),
    ]
